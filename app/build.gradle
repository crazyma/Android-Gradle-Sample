apply plugin: 'com.android.application'

android {
    signingConfigs {
        SproutSigning
    }
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "com.crazyma.gradletest"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        //  application id 會多加.debug，可以區分成不同的apk
        //  debug沒辦法啟用proguard
        debug {
            applicationIdSuffix ".debug"
        }
        //  啟用 proguard
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //用來設定Build Variant，可以同一個project但是設定不同的 signingConfig & application id
    productFlavors {
        demo {
            //  使用上面定義的 Signing
            signingConfig signingConfigs.SproutSigning
            //  此 applicationId 刻意與 manifest 的 package name 不同
            applicationId 'com.sprout.gradletest.demo'
            versionName "1.0-demo"
        }
        pub {
            signingConfig signingConfigs.SproutSigning
            applicationId "com.sprout.gradletest.pub"
            versionName "1.0-pub"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:22.2.1'
}

//rootProject.file(): 取得根目錄中的檔案
def ksFile = rootProject.file('local.properties')
def props = new Properties();
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))

    if (props != null) {
        android.signingConfigs.SproutSigning.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.SproutSigning.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.SproutSigning.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.SproutSigning.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'keystore.properties\' not found!'
    }
} else {
    println '\'keystore.properties\' not found!'
}
